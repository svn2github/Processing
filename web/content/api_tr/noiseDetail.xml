<?xml version="1.0" encoding="ISO-8859-9" standalone="yes"?>
<root>
<name>noiseDetail()</name>

<category>Matematik</category>

<subcategory>Rasgele</subcategory>

<usage>Web &amp; Uygulama</usage>

<example>
<image>noiseDetail_.jar</image>
<code>
float noiseVal; 
float noiseScale=0.02; 
void loop() { 
  for(int y=0; y &lt; height; y++) { 
    for(int x=0; x &lt; width/2; x++) { 
      noiseDetail(3,0.5); 
      noiseVal=noise( 
        (mouseX+x)*noiseScale, 
        (mouseY+y)*noiseScale 
      ); 
      stroke(noiseVal*255); 
      point(x,y); 
      noiseDetail(8,0.65); 
      noiseVal=noise( 
        (mouseX+x+width/2)*noiseScale, 
        (mouseY+y)*noiseScale 
      ); 
      stroke(noiseVal*255); 
      point(x+width/2,y); 
    } 
  } 
} 
</code>
</example>

<description>
Perlin gürültü fonksiyonunun karakterini ve detay düzeyini ayarlar. Fizikteki harmoniye benzer bir þekilde gürültü çeþitli oktavlar üzerinden hesaplanýr. Düþük oktavlar daha çok çýktý sinyaline katkýda bulunup gürültünün toplam yoðunluðunu belirlerken, yüksek oktavlar daha taneli detaylý gürültü dizileri oluþtururlar. Varsayýlan kullanýmda, gürültu 4 oktav üzerinden hesaplanýr, ve ilk oktavdan %50 güçlü baþlayarak her oktav bir öncekinin yarýsý kadar katkýda bulunur. Bu azalma miktarý fonksiyona bir parametre ekleyerek deðiþtirilebilir. Örneðin, 0.75 düþme deðeri her oktavýn önceki oktava 75%(25% daha az) etkisi var demektir. 0.0 ile 1.0 arasýndaki herhangi bir deðer geçerlidir, ancak <b>noise()</b> fonksiyonunda 0.5ten büyük olan deðerler 1.0 deðerinden daha büyük sonuçlanabilir. <br/><br/>Bu parametreleri deðiþtirerek, <b>noise()</b> fonksiyonunun yarattýðý sinyal çok özel ihtiyaçlarý ve karakteristikleri karþýlayabilir.
</description>

<syntax>
noiseDetail(<c>oktavlar</c>)
noiseDetail(<c>oktavlar</c>, <c>dusme</c>)
</syntax>

<parameter>
<label>oktavlar</label>
<description>int: noise() fonksiyonu tarafýndan kullanýlan oktav sayýsý</description>
</parameter>

<parameter>
<label>dusme</label>
<description>float: her oktavýn düþme etkeni</description>
</parameter>

<returns>Yok</returns>

<related>
noise()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Bagel</partof>








</root>