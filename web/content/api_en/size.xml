<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>size()</name>

<category>Structure</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
void setup() {
  size(320, 240);
  background(153);
}

void draw() {
  line(0, 0, width, height);
}
</code>
</example>

<example>
<image></image>
<code>
void setup() {
  size(320, 240, P3D);
  background(153);
}

void draw() {
  line(0, 0, 0, width, height, -200);
}
</code>
</example>

<example>
<image></image>
<code>
import processing.opengl.*;

// Unless running in "Present" mode, this will not take over
// the whole screen on Mac OS X and perhaps other operating systems
void setup() {
  size(screen.width, screen.height, OPENGL);
  background(153);
}

void draw() {
  line(0, 0, 0, width, height, -200);
}
</code>
</example>

<description>
Defines the dimension of the display window in units of pixels. The <b>size()</b> function <em>must</em> be the first line in <b>setup()</b>. If <b>size()</b> is not called, the default size of the window is 100x100 pixels. The system variables <b>width</b> and <b>height</b> are set by the parameters passed to the <b>size()</b> function. <br /> <br />
Do not use variables as the parameters to <b>size()</b> command, because it will cause problems when exporting your sketch, because the dimensions of your sketch cannot magically be determined. Instead, employ numeric values in the size() statement, and then use the built-in <b>width</b> and <b>height</b> variables inside your program when you need the dimensions of the display window are needed. <br /><br />
The MODE parameters selects which rendering engine to use. For example, if you will be drawing 3D shapes for the web use <b>P3D</b>, if you want to export a program with OpenGL graphics acceleration use <b>OPENGL</b>. A brief description of the four primary renderers follows:<br /><br />
P2D (Processing 2D) - 2D renderer supporting Java 1.1 export (NOT CURRENTLY IMPLEMENTED)<br /><br />
P3D (Processing 3D) - Fast 3D renderer for the web. Sacrifices rendering quality for quick 3D drawing.<br /><br />
JAVA2D - The default renderer, higher quality in general, but slower than P2D<br /><br />
OPENGL - Interface with OpenGL hardware acceleration to increase speed if an OpenGL graphics card is installed.<br /><br />
If you're manipulating pixels (using methods like get() or blend(), or manipulating the pixels[] array), P2D and P3D will be faster than the default (JAVA2D) setting, and often the OPENGL setting as well. Similarly, when handling lots of images, or doing video playback, P2D and P3D will tend to be faster.<br /><br />
The maximum width and height is limited by your operating system, and is usually the width and height of your actual screen. On some machines it may simply be the number of pixels on your current screen, meaning that a screen that's 800x600 could support size(1600, 300), since it's the same number of pixels. This varies widely so you'll have to try different rendering modes and sizes until you get what you're looking for. If you need something larger, use <b>createGraphics</b> to create a non-visible drawing surface.
<br/> <br/>
Again, the size() method must be the first line of the code (or first item inside setup). Any code that appears before the size() command may run more than once, which can lead to confusing results.
</description>

<syntax>
size(<c>width</c>, <c>height</c>)
size(<c>width</c>, <c>height</c>, <c>MODE</c>)
</syntax>

<parameter>
<label>width</label>
<description>int: width of the display window in units of pixels</description>
</parameter>

<parameter>
<label>height</label>
<description>int: height of the display window in units of pixels</description>
</parameter>

<parameter>
<label>MODE</label>
<description>Either P2D, P3D, JAVA2D, or OPENGL</description>
</parameter>

<returns>None</returns>

<related>
createGraphics()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>








</root>
