<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>ip()</name>

<category>Server</category>

<subcategory></subcategory>

<usage>Application</usage>

<example>
<image></image>
<code><![CDATA[
// Example by Tom Igoe

// Bug note: stopping the server produces an unrecoverable error:
// "java.net.SocketException: Socket closed
//  at java.net.PlainSocketImpl.socketAccept(Native Method)"
 
import processing.net.*;

int port = 10002;
boolean myServerRunning;
Server myServer;

void setup() {
  size(400, 400);
  background(0);
  myServerRunning = false;
  println("Server Running:" + "\t" + myServerRunning);
}

void draw() {
  // Nothing happening here, everything happens in mousePressed()
}

void mousePressed() {
  // If the mouse clicked the myServer changes status
  println("click");
  if (myServerRunning) {
    // N.B. This produces an error which kills the sketch.
    myServerRunning = false;
    myServer.stop();
    myServer = null;
  } 
  else {
    myServer = new Server(this, port); // Starts a server on port 10002
    myServerRunning = true;
    println(Server.ip());
  }
  background(0);
  println("Server Status:" + "\t" + myServerRunning);
}

]]></code>
</example>

<description><![CDATA[
Returns the IP address of the server. This method is static, so it's run with the code <b>Server.ip()</b>, rather can calling the <b>ip()</b> method of an object created from the Server class.<br />
<br />
Note that the address may be part of a <a href="http://en.wikipedia.org/wiki/Private_network">private network</a> and only accessible to other machines within the same network. In other cases, a publicly accessible address may be returned (though additional router configuration work may be needed to route connections to your machine). In either case, it depends on how the network you connect to is configured and (more rarely) on the network settings of your machine.
]]></description>


</root>
