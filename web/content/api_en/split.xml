<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>split()</name>

<category>Data</category>

<subcategory>String Functions</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
String men = "Chernenko,Andropov,Brezhnev";
String[] list = split(men, ',');
// list[0] is now Chernenko, list[1] is Andropov, ...
</code>
</example>

<example>
<image></image>
<code>
String men = "Chernenko / Andropov / Brezhnev";
String[] list = split(men, " / ");
// list[0] is now Chernenko, list[1] is Andropov, ...
</code>
</example>

<example>
<image></image>
<code>
String numbers = "8 67 5 309";
int[] nums = int(split(numbers, ' '));
// nums[0] is now 8, nums[1] is now 67, ...
</code>
</example>

<description>
The split() function breaks a string into pieces using a character or string as the divider. The <b>delim</b> parameter specifies the character or characters that mark the boundaries between each piece. A String[] array is returned that contains each of the pieces.
<br/> <br/>
If the result is a set of numbers, you can convert the String[] array to to a float[] or int[] array using the datatype conversion functions <b>int()</b> and <b>float()</b> (see example above).
<br/> <br/> 
The <b>splitTokens()</b> function works in a similar fashion, except that it splits using a range of characters instead of a specific character or sequence.
</description>

<syntax>
split(<c>str</c>, <c>delim</c>)
</syntax>

<parameter>
<label>str</label>
<description>the String to be split</description>
</parameter>

<parameter>
<label>delim</label>
<description>the character or String used to separate the data</description>
</parameter>

<returns>String[]</returns>

<related>
splitTokens()
join()
trim()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

</root>
