<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>PVector</name>

<category>Math</category>

<subcategory>PVector</subcategory>

<example>
<image></image>
<code><![CDATA[
PVector v1, v2;

void setup() {
  smooth();
  noLoop();
  v1 = new PVector(40, 20);
  v2 = new PVector(25, 50); 
}

void draw() {
  ellipse(v1.x, v1.y, 12, 12);
  ellipse(v2.x, v2.y, 12, 12);
  v2.add(v1);
  ellipse(v2.x, v2.y, 24, 24);
}
]]></code>
</example>

<description><![CDATA[
A class to describe a two or three dimensional vector. This datatype stores two or three variables that are commonly used as a position, velocity, and/or acceleration. Technically, <em>position</em> is a point and <em>velocity</em> and <em>acceleration</em> are vectors, but this is often simplified to consider all three as vectors. For example, if you consider a rectangle moving across the screen, at any given instant it has a position (the object’s location, expressed as a point.), a velocity (the rate at which the object’s position changes per time unit, expressed as a vector), and acceleration (the rate at which the object’s velocity changes per time unit, expressed as a vector). Since vectors represent groupings of values, we cannot simply use traditional addition/multiplication/etc. Instead, we’ll need to do some "vector" math, which is made easy by the methods inside the PVector class.
<br /><br />
There are additional methods and other ways to use some of these methods in the <a href="http://code.google.com/p/processing/source/browse/trunk/processing/core/src/processing/core/PVector.java">developers reference.</a>
]]></description>

</root>
