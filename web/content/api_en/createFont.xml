<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>createFont()</name>

<category>Typography</category>

<subcategory>Loading &amp; Displaying</subcategory>

<example>
<image></image>
<code><![CDATA[
PFont myFont;

void setup() {
  size(200, 200);
  // Uncomment the following two lines to see the available fonts 
  //String[] fontList = PFont.list();
  //println(fontList);
  myFont = createFont("FFScala", 32);
  textFont(myFont);
  text("!@#$%", 10, 50);
}

]]></code>
</example>

<description><![CDATA[
Dynamically converts a font to the format used by Processing from either a font name that's installed on the computer, or from a .ttf or .otf file inside the sketches "data" folder. This function is an advanced feature for precise control. On most occasions you should create fonts through selecting "Create Font..." from the Tools menu.
<br /><br />
Use the <b>PFont.list()</b> method to first determine the names for the fonts recognized by the computer and are compatible with this function. Because of limitations in Java, not all fonts can be used and some might work with one operating system and not others. When sharing a sketch with other people or posting it on the web, you may need to include a .ttf or .otf version of your font in the data directory of the sketch because other people might not have the font installed on their computer. Only fonts that can legally be distributed should be included with a sketch. 
<br /><br />
The <b>size</b> parameter states the font size you want to generate. The <b>smooth</b> parameter specifies if the font should be antialiased or not, and the <b>charset</b> parameter is an array of chars that specifies the characters to generate. 
<br /><br />
This function creates a bitmapped version of a font in the same manner as the Create Font tool. It loads a font by name, and converts it to a series of images based on the size of the font. When possible, the <b>text()</b> function will use a native font rather than the bitmapped version created behind the scenes with <b>createFont()</b>. For instance, when using P2D, the actual native version of the font will be employed by the sketch, improving drawing quality and performance. With the P3D renderer, the bitmapped version will be used. While this can drastically improve speed and appearance, results are poor when exporting if the sketch does not include the .otf or .ttf file, and the requested font is not available on the machine running the sketch. 
]]></description>

</root>
