<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>createFont()</name>

<category>Typography</category>

<subcategory>Loading &amp; Displaying</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
PFont myFont;

void setup() {
  size(200, 200);
  // Uncomment the following two lines to see the available fonts 
  //String[] fontList = PFont.list();
  //println(fontList);
  myFont = createFont("FFScala", 32);
  textFont(myFont);
  text("!@#$%", 10, 50);
}

</code>
</example>

<description>
Dynamically converts a font to the format used by Processing from either a font name that's installed on the computer, or from a .ttf or .otf file inside the sketches "data" folder. Use the <b>PFont.list()</b> method to first determine the names for the fonts recognized by the computer and are compatible with this function. Not all fonts can be used and some might work with one operating system and not others. If you're going to be sharing the program with other people or posting it on the web, it's important to include a .ttf or .otf version of your font in the data directory of the sketch because other people might not have the font installed on their computer. Only fonts that can legally be distributed should be included with a sketch. <br /><br />The <b>size</b> parameter states the font size you want to generate. The <b>smooth</b> parameter specifies if the font should be antialiased or not, and the <b>charset</b> parameter is an array of chars that specifies the characters to generate. <br /><br /> For most renderers, Processing displays fonts using the .vlw font format, which uses images for each letter, rather than defining them through vector data. With the JAVA2D renderer, createFont() enables vector data to be used, this can be helpful when many font sizes are needed, or when drawing in conjunction with any renderer based on JAVA2D, such as the PDF library. <br /><br />This function is an advanced feature for precise control. On most occasions you should create fonts through selecting "Create Font..." from the Tools menu.
</description>

<syntax>
createFont(<c>name</c>, <c>size</c>)
createFont(<c>name</c>, <c>size</c>, <c>smooth</c>)
createFont(<c>name</c>, <c>size</c>, <c>smooth</c>, <c>charset</c>)
</syntax>

<parameter>
<label>name</label>
<description>String: name of the font to load</description>
</parameter>

<parameter>
<label>size</label>
<description>float: point size of the font</description>
</parameter>

<parameter>
<label>charset</label>
<description>char[]: array containing characters to be generated</description>
</parameter>

<parameter>
<label>smooth</label>
<description>boolean: true for an antialiased font, false for aliased</description>
</parameter>

<returns>PFont</returns>

<related>
PFont 
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>


<level>Extended</level>



</root>
