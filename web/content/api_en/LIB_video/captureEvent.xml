<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>captureEvent()</name>

<category>Video</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
import processing.video.*;
Capture myCapture;

void setup() 
{
  size(200, 200);
  // The name of the device is dependent on what's
  // plugged into the computer. To get a list of the 
  // choices, uncomment the following line 
  // println(Capture.list());
  String s = "Logitech QuickCam Messenger-WDM";
  myCapture = new Capture(this, s, width, height, 30);
}

void captureEvent(Capture myCapture) {
  myCapture.read();
}

void draw() {
  image(myCapture, 0, 0);
}

</code>
</example>

<example>
<image></image>
<code>
import processing.video.*;
Capture myCapture;
String[] caps;

void setup() 
{
  size(200, 200);
  caps = Capture.list()
  myCapture = new Capture(this, caps[0], width, height, 30);
  myCapture = new Capture(this, caps[1], width, height, 30);
}

void captureEvent(Capture c) {
  if(c == caps[0]) {
    myCapture.read();
  } else if (c == caps[1]) {
    myCapture.read();
  }
}

void draw() {
  image(myCapture, 0, 0);
}

</code>
</example>

<description>
Called when a new camera frame is available. Use the <b>read()</b> method to capture this frame. If there is more than one capture device in the program, <b>captureEvent()</b> is called each time any of the devices has a new frame available. Use an <b>if()</b> to determine which device is triggering the event. See the above example for implementation details.
</description>

<syntax>
void captureEvent(Capture <c>which</c>) {
  <c>statements</c>
}
</syntax>

<parameter>
<label>statements</label>
<description>any valid statements</description>
</parameter>

<parameter>
<label>which</label>
<description>the camera with the event</description>
</parameter>

<returns></returns>

<related>
Capture
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>core</partof>








</root>
