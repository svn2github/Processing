<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>getChildren()</name>

<category>XMLElement</category>

<subcategory>Method</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
import processing.xml.*;

// The following short XML file called "sites.xml" is parsed 
// in the code below. It must be in the project's "data" directory
// &#60;?xml version="1.0"?&#62;
// &#60;websites&#62;
//   &#60;site id="0" url="processing.org"&#62;Processing&#60;/site&#62;
//   &#60;site id="1" url="mobile.processing.org"&#62;Processing Mobile&#60;/site&#62;
// &#60;/websites&#60;

XMLElement xml;

void setup() {
  size(200, 200);
  xml = new XMLElement(this, "sites.xml");
  XMLElement[] kids = xml.getChildren();
  for (int i=0; i &#60; kids.length; i++) {
    String site = kids[i].getContent();
    println(site); 
  }
}
</code>
</example>

<example>
<image></image>
<code>
import processing.xml.*;

void setup() {
  // Download RSS feed of news stories from yahoo.com
  String url = "http://rss.news.yahoo.com/rss/topstories";
  XMLElement rss = new XMLElement(this, url);
  // Get all &lt;link&gt; elements
  XMLElement[] links = rss.getChildren("channel/item/link");
  for (int i = 0; i &#60; links.length; i++) {
    println(links[i].getContent());
  }
}
</code>
</example>

<description>
Returns all of the children as an XMLElement array.
When the <b>path</b> parameter is specified, then it will return all children that match that path. The path is a series of elements and sub-elements, separated by slashes.
</description>

<syntax>
<c>xml</c>.getChildren()
<c>xml</c>.getChildren(<c>path</c>)
</syntax>

<parameter>
<label>xml</label>
<description>any variable of type XMLElement</description>
</parameter>

<returns>XMLElement[]</returns>

<related>
XMLElement_getChildCount()
XMLElement_getChild()
</related>

<availability>1.0</availability>

<type>Method</type>

<partof>Core</partof>

<level>Extended</level>


</root>
