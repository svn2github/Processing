<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>splitTokens()</name>

<category>Data</category>

<subcategory>String Functions</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
String t = "a b";
String[] q = splitTokens(t);
println(q[0]); // Prints "a"
println(q[1]); // Prints "b"
]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
// Despite the bad formatting, the data is parsed correctly.
// The ", " as delimiter means to break whenever a comma *or*
// a space is found in the String. Unlike the split() function, 
// multiple adjacent delimiters are treated as a single break.
String s = "a, b c ,,d "; 
String[] p = splitTokens(s, ", ");
println(p[0]); // Prints "a"
println(p[1]); // Prints "b"
println(p[2]); // Prints "c"
println(p[3]); // Prints "d"
]]></code>
</example>

<description><![CDATA[
The splitTokens() function splits a String at one or many character "tokens." The <b>tokens</b> parameter specifies the character or characters to be used as a boundary.
<br/> <br/>
If no <b>tokens</b> character is specified, any whitespace character is used to split. Whitespace characters include tab (\\t), line feed (\\n), carriage return (\\r), form feed (\\f), and space. To convert a String to an array of integers or floats, use the datatype conversion functions <b>int()</b> and <b>float()</b> to convert the array of Strings.
]]></description>

<syntax>
splitTokens(<c>str</c>)
splitTokens(<c>str</c>, <c>tokens</c>)
</syntax>

<parameter>
<label>str</label>
<description><![CDATA[the string to be split]]></description>
</parameter>

<parameter>
<label>tokens</label>
<description><![CDATA[list of individual characters that will be used as separators]]></description>
</parameter>

<returns>String[]</returns>

<related>
split()
join()
trim()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

</root>
