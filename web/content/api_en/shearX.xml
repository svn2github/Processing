<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>shearX()</name>

<category>Transform</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>shearX_.gif</image>
<code><![CDATA[
size(100, 100, P2D);
translate(width/4, height/4);
shearX(PI/4.0);
rect(0, 0, 30, 30);
]]></code>
</example>

<description>
Shears a shape around the x-axis the amount specified by the <b>angle</b> parameter. Angles should be specified in radians (values from 0 to PI*2) or converted to radians with the <b>radians()</b> function. Objects are always sheared around their relative position to the origin and positive numbers shear objects in a clockwise direction. Transformations apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling <b>shearX(PI/2)</b> and then <b>shearX(PI/2)</b> is the same as <b>shearX(PI)</b>. If <b>shearX()</b> is called within the <b>draw()</b>, the transformation is reset when the loop begins again. This function works in P2D or JAVA2D mode as shown in the example above.
<br/> <br/>
Technically, <b>shearX()</b> multiplies the current transformation matrix by a rotation matrix. This function can be further controlled by the <b>pushMatrix()</b> and <b>popMatrix()</b> functions.
</description>

<syntax>
shearX(<c>angle</c>); 
</syntax>

<parameter>
<label>angle</label>
<description>float: angle of shear specified in radians</description>
</parameter>

<returns>None</returns>

<related>
shearY() 
translate() 
scale() 
pushMatrix() 
popMatrix() 
radians()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>








</root>
