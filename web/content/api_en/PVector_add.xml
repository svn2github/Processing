<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>add()</name>

<category>PVector</category>

<subcategory>Method</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
PVector v1, v2;

void setup() {
  smooth();
  noLoop();
  v1 = new PVector(40, 20, 0);
  v2 = new PVector(25, 50, 0); 
}

void draw() {
  ellipse(v1.x, v1.y, 12, 12);
  ellipse(v2.x, v2.y, 12, 12);
  v2.add(v1);
  ellipse(v2.x, v2.y, 24, 24);
}
]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
PVector v;

void setup() {
  smooth();
  noLoop();
  v = new PVector(40, 20, 0);
}

void draw() {
  ellipse(v.x, v.y, 12, 12);
  ellipse(25, 50, 12, 12);
  v.add(25, 50, 0);
  ellipse(v.x, v.y, 24, 24);
}
]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
PVector v1, v2;

void setup() {
  smooth();
  noLoop();
  v1 = new PVector(40, 20, 0);
  v2 = new PVector(25, 50, 0); 
}

void draw() {
  ellipse(v1.x, v1.y, 12, 12);
  ellipse(v2.x, v2.y, 12, 12);
  PVector v3 = PVector.add(v1, v2);
  ellipse(v3.x, v3.y, 24, 24);
}
]]></code>
</example>


<description><![CDATA[
Adds x, y, and z components to a vector, adds one vector to another, or adds two independent vectors together. The version of the method that adds two vectors together is a static method and returns a PVector, the others have no return value -- they act directly on the vector. See the examples for more context.
]]></description>

<syntax>
<c>vec</c>.add(<c>x</c>, <c>y</c>, <c>z</c>)
<c>vec</c>.add(<c>v</c>)
PVector.add(<c>v1</c>, <c>v2</c>)
</syntax>

<parameter>
<label>vec</label>
<description><![CDATA[any variable of type PVector]]></description>
</parameter>

<parameter>
<label>x</label>
<description><![CDATA[float: the x component of the vector]]></description>
</parameter>

<parameter>
<label>y</label>
<description><![CDATA[float: the y component of the vector]]></description>
</parameter>

<parameter>
<label>z</label>
<description><![CDATA[float: the z component of the vector]]></description>
</parameter>

<parameter>
<label>v</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>

<parameter>
<label>v1</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>

<parameter>
<label>v2</label>
<description><![CDATA[PVector: the x, y, and z components of a PVector object]]></description>
</parameter>



<parameter>
<label>vec</label>
<description><![CDATA[any variable of type PVector]]></description>
</parameter>

<returns>None or PVector</returns>

<related></related>

<availability>1.0</availability>

<type>Method</type>

<partof>Core</partof>

<level>Extended</level>


</root>
