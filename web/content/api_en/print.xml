<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>print()</name>

<category>Output</category>

<subcategory>Text Area</subcategory>

<usage>IDE</usage>

<example>
<image></image>
<code><![CDATA[
print("begin- ");
float f = 0.3;
int i = 1024;
print("f is " + f + " and i is " + 1024);
String s = " -end";
println(s);

// The above code prints:
// begin- f is 0.3 and i is 1024 -end
]]></code>
</example>

<description>
Writes to the console area of the Processing environment. This is often helpful for looking at the data a program is producing. The companion function <b>println()</b> works like <b>print()</b>, but creates a new line of text for each call to the function. Individual elements can be separated with quotes ("") and joined with the addition operator (+). 
<br/><br/>
Beginning with release 0125, to print the contents of an array, use println(). 
There's no sensible way to do a <b>print()</b> of an array, 
because there are too many possibilities for how to separate the data 
(spaces, commas, etc). 
If you want to print an array as a single line, use <b>join()</b>. 
With join(), you can choose any delimiter you like and <b>print()</b> the result. 
<br/><br/>
Using <b>print()</b> on an object will output <b>null</b>, a memory location 
that may look like "@10be08," or the result of the <b>toString()</b> method from the object that's being printed.
Advanced users who want more useful output when calling print() on their own classes can add a toString() method to the class that returns a String.
</description>

<syntax>
print(<c>data</c>)
</syntax>

<parameter>
<label>data</label>
<description>boolean, byte, char, color, int, float, String, Object</description>
</parameter>

<returns></returns>

<related>
println()
null
join()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>








</root>
