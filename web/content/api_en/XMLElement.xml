<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>XMLElement</name>

<category>Data</category>

<subcategory>Composite</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
// The following short XML file called "sites.xml" is parsed 
// in the code below. It must be in the project's "data" directory
// &#60;?xml version="1.0"?&#62;
// &#60;websites&#62;
//   &#60;site id="0" url="processing.org"&#62;Processing&#60;/site&#62;
//   &#60;site id="1" url="mobile.processing.org"&#62;Processing Mobile&#60;/site&#62;
// &#60;/websites&#62;

XMLElement xml;

void setup() {
  size(200, 200);
  xml = new XMLElement(this, "sites.xml");
  int numSites = xml.getChildCount();
  for (int i = 0; i &lt; numSites; i++) {
    XMLElement kid = xml.getChild(i);
    int id = kid.getInt("id"); 
    String url = kid.getString("url"); 
    String site = kid.getContent();
    println(id + " : " + url + " : " + site);    
  }
}
</code>
</example>

<description>
XMLElement is a representation of an XML object. The object is able to parse XML code. The methods described here are the most basic. More are documented in the Developer's Reference.
<br/> <br/>
The encoding parameter inside XML files is ignored, only UTF-8 (or plain ASCII) are parsed properly.
</description>

<syntax>
</syntax>

<parameters>
</parameters>

<method>
<mname>getChildCount()</mname>
<mdescription>Returns the number of children for the element.</mdescription>
</method>

<method>
<mname>getChild()</mname>
<mdescription>Returns a single child.</mdescription>
</method>

<method>
<mname>getChildren()</mname>
<mdescription>Returns all of the children as an XMLElement array.</mdescription>
</method>

<method>
<mname>getContent()</mname>
<mdescription>Returns the content of an element</mdescription>
</method>

<method>
<mname>getInt()</mname>
<mdescription>Returns an integer attribute of the element.</mdescription>
</method>

<method>
<mname>getFloat()</mname>
<mdescription>Returns a float attribute of the element.</mdescription>
</method>

<method>
<mname>getString()</mname>
<mdescription>Returns a String attribute of the element.</mdescription>
</method>

<method>
<mname>getName()</mname>
<mdescription>Returns the name of the element.</mdescription>
</method>


<constructor>
XML(<c>parent</c>, <c>file</c>)
</constructor>

<cparameter>
<clabel>parent</clabel>
<cdescription>PApplet: typically use "this"</cdescription>
</cparameter>

<cparameter>
<clabel>file</clabel>
<cdescription>String: name of the XML file to load</cdescription>
</cparameter>


<returns></returns>

<related></related>

<availability>1.0</availability>

<type>Object</type>

<partof>Core</partof>

<level>Extended</level>

</root>
