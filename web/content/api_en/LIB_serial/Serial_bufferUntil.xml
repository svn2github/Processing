<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>bufferUntil()</name>

<category>Serial</category>

<subcategory>Serial</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
// Example by Tom Igoe

import processing.serial.*;

Serial myPort;    // The serial port:
PFont myFont;     // The display font:
String inString;  // Input string from serial port:
int lf = 10;      // ASCII linefeed

void setup() {
  size(400,200);
  // Make your own font. It's fun!
  myFont = loadFont("ArialMS-18.vlw");
  textFont(myFont, 18);
  // List all the available serial ports:
  println(Serial.list());
  // I know that the first port in the serial list on my mac
  // is always my  Keyspan adaptor, so I open Serial.list()[0].
  // Open whatever port is the one you're using.
  myPort = new Serial(this, Serial.list()[0], 9600);
  myPort.bufferUntil(lf);
}

void draw() {
  background(0);
  text("received: " + inString, 10,50);
}

void serialEvent(Serial p) {
  inString = (myPort.readString());
}

</code>
</example>

<description>
Sets a specific byte to buffer until before calling serialEvent().
</description>

<syntax>
<c>serial</c>.bufferUntil(<c>what</c>)
</syntax>

<parameter>
<label>serial</label>
<description>any variable of type Serial</description>
</parameter>

<parameter>
<label>what</label>
<description>int: the value to buffer until</description>
</parameter>

<returns>int</returns>

<related></related>

<availability>1.0</availability>

<type>Method</type>

<partof>Library</partof>


</root>
