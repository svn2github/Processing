<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>read()</name>

<category>Serial</category>

<subcategory>Serial</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
// Example by Tom Igoe

import processing.serial.*;

Serial myPort;  // The serial port

void setup() {
  // List all the available serial ports
  println(Serial.list());
  // I know that the first port in the serial list on my mac
  // is always my  Keyspan adaptor, so I open Serial.list()[0].
  // Open whatever port is the one you're using.
  myPort = new Serial(this, Serial.list()[0], 9600);
}

void draw() {
  while (myPort.available() > 0) {
    int inByte = myPort.read();
    println(inByte);
  }
}

</code>
</example>

<description>
Returns a number between 0 and 255 for the next byte that's waiting in the buffer. Returns -1 if there is no byte, although this should be avoided by first cheacking <b>available()</b> to see if data is available.
</description>

<syntax>
<c>serial</c>.read()
</syntax>

<parameter>
<label>serial</label>
<description>any variable of type Serial</description>
</parameter>
<parameter>

<returns>int</returns>

<related></related>

<availability>1.0</availability>

<type>Method</type>

<partof>Library</partof>


</root>
