<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>set()</name>

<category>Image</category>

<subcategory>Pixels</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>set_.gif</image>
<code>
color black = color(0);
set(30, 20, black);
set(85, 20, black);
set(85, 75, black);
set(30, 75, black);
</code>
</example>

<example>
<image>set_2.jpg</image>
<code>
for (int i=30; i&lt;(width-15); i++) {
  for(int j=20; j&lt;(height-25); j++) {
    color c = color(204-j, 153-i, 0);
    set(i, j, c);
  }
}
</code>
</example>

<example>
<image>set_3.jpg</image>
<code>
size(100, 100, P3D);
PImage myImage = loadImage("topanga.jpg");
set(0, 0, myImage);
line(0, 0, width, height);
line(0, height, width, 0);
</code>
</example>

<description>
Changes the color of any pixel or writes an image directly into the display window. The <b>x</b> and <b>y</b> parameter specify the pixel to change and the <b>color</b> parameter specifies the color value. The color parameter is affected by the current color mode (the default is RGB values from 0 to 255). When setting an image, the x and y parameters define the coordinates for the upper-left corner of the image (the placement of the image is not affected by the <b>imageMode()</b> function).<br /><br />Setting the color of a single pixel with <b>set(x, y)</b> is easy, but not as fast as putting the data directly into <b>pixels[]</b>. The equivalent statement to "set(x, y, #000000)" using <b>pixels[]</b> is "pixels[y*width+x] = #000000". The (BETA) version of Processing requires calling <b>loadPixels()</b> to load the display window data into the <b>pixels[]</b> array before getting the values and calling <b>updatePixels()</b> to update the window.
</description>

<syntax>
set(<c>x</c>, <c>y</c>, <c>color</c>)
set(<c>x</c>, <c>y</c>, <c>image</c>)
</syntax>

<parameter>
<label>x</label>
<description>int: x-coordinate of the pixel</description>
</parameter>

<parameter>
<label>y</label>
<description>int: y-coordinate of the pixel</description>
</parameter>

<parameter>
<label>color</label>
<description>color: any value of the color datatype</description>
</parameter>

<parameter>
<label>image</label>
<description>PImage: any valid variable of type PImage</description>
</parameter>

<returns>None</returns>

<related>
get()
pixels[]
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>








</root>
