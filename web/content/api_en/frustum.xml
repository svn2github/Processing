<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>frustum()</name>

<category>Lights, Camera</category>

<subcategory>Camera</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>frustum_.gif</image>
<code><![CDATA[
size(100, 100, P3D);
noFill();
background(204);
frustum(-width/2, width, 0, height, -100, 200.0);
rotateY(PI/6);
box(45);
]]></code>
</example>

<description>
Sets a perspective matrix defined through the parameters. Works like glFrustum, except it wipes out the current perspective matrix rather than muliplying itself with it.
</description>

<syntax>
frustum(<c>left</c>, <c>right</c>, <c>bottom</c>, <c>top</c>, <c>near</c>, <c>far</c>)
</syntax>

<parameter>
<label>left</label>
<description>float: left coordinate of the clipping plane</description>
</parameter>

<parameter>
<label>right</label>
<description>float: right coordinate of the clipping plane</description>
</parameter>

<parameter>
<label>bottom</label>
<description>float: bottom coordinate of the clipping plane</description>
</parameter>

<parameter>
<label>top</label>
<description>float: top component of the clipping plane</description>
</parameter>

<parameter>
<label>near</label>
<description>float: near component of the clipping plane</description>
</parameter>

<parameter>
<label>far</label>
<description>float: far component of the clipping plane</description>
</parameter>

<returns>None</returns>

<related>
camera()
endCamera()
perspective()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>


</root>
