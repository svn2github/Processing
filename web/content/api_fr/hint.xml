test
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>hint()</name>

<category>Rendering</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code>
void setup() {
  size(400, 400, OPENGL);
  // Enable 4x oversampling (if supported)
  hint(ENABLE_OPENGL_4X_SMOOTH);
}
</code>
</example>

<description>
Set various hints and hacks for the renderer. This is used to handle obscure rendering features that cannot be implemented in a consistent manner across renderers. Many options will often graduate to standard features instead of hints over time.
<br/> <br/>
hint(ENABLE_OPENGL_2X_SMOOTH) and hint(ENABLE_OPENGL_4X_SMOOTH) - Enable 2x or 4x anti-aliasing for OpenGL. This can help force anti-aliasing if it has not been enabled by the user. On some graphics cards, this can also be set by the graphics driver's control panel, however not all cards make this available. This is not enabled by default, because on many machines, this disables the ability to accumulate an image over time. That is, it may only work when background() is called on each frame. This hint should be called immediately after the size() command because it resets the renderer, obliterating any settings and anything drawn (and like size(), re-running the code again). With some graphics cards, this option may enforce all drawing to be smoothed: calling smooth() may not be necessary, and noSmooth() might be ignored altogether.
<br/> <br/>
hint(ENABLE_NATIVE_FONTS) - Use the native version fonts when they are installed, rather than the bitmapped version from a .vlw file. This is useful with the JAVA2D renderer setting, as it will improve font rendering speed. This is not enabled by default, because it can be misleading while testing because the type will look great on your machine (because you have the font installed) but lousy on others' machines because they may not have the font available.
<br/> <br/>
hint(DISABLE_DEPTH_TEST) - Disable the zbuffer, allowing you to draw on top of everything at will. When depth testing is disabled, items will be drawn to the screen sequentially, like a painting. This is most often used to draw in 3D, then draw in 2D on top of it (for instance, to draw GUI controls in 2D on top of a 3D interface).
<br/> <br/>
hint(ENABLE_DEPTH_SORT) - Enable primitive z-sorting of triangles and lines in P3D and OPENGL. This can slow performance considerably, and the algorithm is not yet perfect.
<br/> <br/>
hint(DISABLE_ERROR_REPORT) - Speeds up the OPENGL renderer setting by not checking for errors while running.
<br/> <br/>
hint(ENABLE_ACCURATE_TEXTURES) - Enables better texture accuracy for the P3D renderer. This option will do a better job of dealing with textures in perspective.
<br/> <br/>
hint(DISABLE_AUTO_GZIP) - When a file has a .gz extension and is loaded or saved, the file will automatically be uncompressed or compressed. This may not be desirable in some cases, so the behavior can be shut off. 
</description>

<syntax>
hint(<c>item</c>)
</syntax>

<parameter>
<label>item</label>
<description>constant: name of the hint to be enabled</description>
</parameter>

<returns>None</returns>

<related>
unhint
PGraphics
createGraphics
size
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>

</root>
