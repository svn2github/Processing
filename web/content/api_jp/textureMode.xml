<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>textureMode()</name>

<category>Shape</category>

<subcategory>Vertex</subcategory>

<usage>Application &amp; Web</usage>

<example>
<image>textureMode_.gif</image>
<code>
noStroke();
BImage a = loadImage("arch.jpg");
textureMode(IMAGE_SPACE);
beginShape();
texture(a);
vertex(10, 20, 0, 0);
vertex(80, 5, 100, 0);
vertex(95, 90, 100, 100);
vertex(40, 95, 0, 100);
endShape();
</code>
</example>

<example>
<image>textureMode_2.gif</image>
<code>
noStroke();
BImage a = loadImage("arch.jpg");
textureMode(NORMAL_SPACE);
beginShape();
texture(a);
vertex(10, 20, 0, 0);
vertex(80, 5, 1, 0);
vertex(95, 90, 1, 1);
vertex(40, 95, 0, 1);
endShape();
</code>
</example>

<description>
Sets the coordinate space for texture mapping. There are two options, IMAGE_SPACE, which refers to the actual coordinates of the image, and NORMAL_SPACE, which refers to a normalized space of values ranging from 0 to 1. The default mode is IMAGE_SPACE. In IMAGE_SPACE, if an image is 100 x 200 pixels, mapping the image onto the entire size of a quad would require the points 0,0 0,100 100,200 0,200. The same mapping in NORMAL_SPACE is 0,0 0,1 1,1 0,1.
</description>

<syntax>
texture(<c>MODE</c>); 
</syntax>

<parameter>
<label>MODE</label>
<description>either IMAGE_SPACE or NORMAL_SPACE</description>
</parameter>

<returns>None</returns>

<related>
texture()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>


<level>Extended</level>





</root>
