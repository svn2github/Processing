<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>get()</name>

<category>PImage</category>

<subcategory>Method</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>PImage_get.jpg</image>
<code>
PImage img = loadImage("tower.jpg");
background(img);
noStroke(); 
color c = img.get(60, 90); 
fill(c); 
rect(25, 25, 50, 50); 
</code>
</example>

<example>
<image>PImage_get2.jpg</image>
<code>
PImage img = loadImage("tower.jpg");
background(img);
PImage b = img.get(50, 0, 50, 100); 
image(b, 0, 0);  
</code>
</example>

<description>
Reads the color of any pixel or grabs a group of pixels. The numbers returned are scaled according to the current color ranges, but only RGB values are returned by this function. Even though you may have drawn a shape with <b>colorMode(HSB)</b>, the numbers returned will be in RGB. If the pixel requested is outside of the image window, the background color is returned. Get a section of the image by specifying a <b>width</b> and <b>height</b> parameter. The version without any parameters returns the entire image.
</description>

<syntax>
<c>img</c>.get()
<c>img</c>.get(<c>x</c>, <c>y</c>)
<c>img</c>.get(<c>x</c>, <c>y</c>, <c>width</c>, <c>height</c>)
</syntax>

<parameter>
<label>img</label>
<description>PImage: any variable of type PImage</description>
</parameter>

<parameter>
<label>x</label>
<description>int: x-coordinate of the pixel</description>
</parameter>

<parameter>
<label>y</label>
<description>int: y-coordinate of the pixel</description>
</parameter>

<parameter>
<label>width</label>
<description>int: width of pixel rectangle to get</description>
</parameter>

<parameter>
<label>height</label>
<description>int: height of pixel rectangle to get</description>
</parameter>

<returns>color or PImage</returns>

<related>
set()
pixels[]
copy()
</related>

<availability>1.0</availability>

<type>Method</type>

<partof>Core</partof>








</root>
