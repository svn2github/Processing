<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>blend()</name>
<category>Image</category>
<subcategory>Pixels</subcategory>
<usage>Web &amp; Application</usage>

<example>
<image>blend_add.jpg</image>
<code>
background(loadImage("rockies.jpg")); 
PImage img = loadImage("degaul.jpg"); 
image(img, 0, 0);
blend(img, 0, 0, 33, 100, 67, 0, 100, 100, ADD); 
</code>
</example>

<example>
<image>blend_subtract.jpg</image>
<code>
background(loadImage("rockies.jpg")); 
PImage img = loadImage("degaul.jpg"); 
image(img, 0, 0);
blend(img, 0, 0, 33, 100, 67, 0, 100, 100, SUBTRACT); 
</code>
</example>

<example>
<image>blend_darkest.jpg</image>
<code>
background(loadImage("rockies.jpg")); 
PImage img = loadImage("degaul.jpg"); 
image(img, 0, 0);
blend(img, 0, 0, 33, 100, 67, 0, 100, 100, DARKEST); 
</code>
</example>

<example>
<image>blend_lightest.jpg</image>
<code>
background(loadImage("rockies.jpg")); 
PImage img = loadImage("degaul.jpg"); 
image(img, 0, 0);
blend(img, 0, 0, 33, 100, 67, 0, 100, 100, LIGHTEST); 
</code>
</example>

<description>
Copies a single pixel or region of pixels from one image into another (or in itself again) with full alpha channel support and a choice of the following modes to blend the colours of source pixels (A) with the ones of pixels in the destination image (B):<br /><br />BLEND - linear interpolation of colours: C = A*factor + B<br /><br />ADD - additive blending with white clip: C = min(A*factor + B, 255)<br /><br />SUBTRACT - subtractive blending with black clip: C = max(B - A*factor, 0)<br /><br />DARKEST - only the darkest colour succeeds: C = min(A*factor, B)<br /><br />LIGHTEST - only the lightest colour succeeds: C = max(A*factor, B)<br /><br />All modes use the alpha information (highest byte) of source image pixels as the blending factor. If the source and destination regions are different sizes, the image will be automatically resized to match the destination size. If the <b>srcImg</b> parameter is not used, the display window is used as the source image.
</description>

<syntax>
blend(<c>sx</c>, <c>sy</c>, <c>dx</c>, <c>dy</c>, <c>mode</c>);
blend(<c>srcImg</c>, <c>sx</c>, <c>sy</c>, <c>dx</c>, <c>dy</c>, <c>mode</c>);
blend(<c>sx1</c>, <c>sy1</c>, <c>sx2</c>, <c>sy2</c>, <c>dx1</c>, <c>dy1</c>, <c>dx2</c>, <c>dy2</c>, <c>mode</c>);
blend(<c>srcImg</c>, <c>sx1</c>, <c>sy1</c>, <c>sx2</c>, <c>sy2</c>, <c>dx1</c>, <c>dy1</c>, <c>dx2</c>, <c>dy2</c>, <c>mode</c>);
</syntax>

<parameter>
<label>sx</label>
<description>int: X coordinate of the pixel in source image</description>
</parameter>

<parameter>
<label>sy</label>
<description>int: Y coordinate of the pixel in source image</description>
</parameter>

<parameter>
<label>dx</label>
<description>int: X coordinate of the pixel in destination image</description>
</parameter>

<parameter>
<label>dy</label>
<description>int: Y coordinate of the pixel in destination image</description>
</parameter>

<parameter>
<label>mode</label>
<description>Either BLEND, ADD, SUBTRACT, LIGHTEST, DARKEST</description>
</parameter>

<parameter>
<label>srcImg</label>
<description>PImage: a image variable referring to the source image<description>
</parameter>

<parameter>
<label>sx1</label>
<description>int: X coordinate of the source's upper left corner</description>
</parameter>

<parameter>
<label>sy1</label>
<description>int: Y coordinate of the source's upper left corner</description>
</parameter>

<parameter>
<label>sx2</label>
<description>int: X coordinate of the source's lower right corner</description>
</parameter>

<parameter>
<label>sy2</label>
<description>int: Y coordinate of the source's lower right corner</description>
</parameter>

<parameter>
<label>dx1</label>
<description>int: X coordinate of the destination's upper left corner</description>
</parameter>

<parameter>
<label>dy1</label>
<description>int: Y coordinate of the destination's upper left corner</description>
</parameter>

<parameter>
<label>dx2</label>
<description>int: X coordinate of the destination's lower right corner</description>
</parameter>

<parameter>
<label>dy2</label>
<description>int: Y coordinate of the destination's lower right corner</description>
</parameter>


<returns>None</returns>

<related>
replicate()
</related>

<availability>1.0</availability>
<type>Function</type>
<partof>Core</partof>
</root>
