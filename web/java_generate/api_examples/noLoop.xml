<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>noLoop()</name>

<category>Structure</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<applet></applet>
<code><![CDATA[
void setup() {
  size(200, 200);
  noLoop();
}

void draw() {
  line(10, 10, 190, 190);
}
]]></code>
</example>

<example>
<image></image>
<applet></applet>
<code><![CDATA[
void setup() {
  size(200, 200);
}

float x = 0.0;

void draw() {
  background(204);
  x = x + 0.1;
  if (x &gt; width) {
    x = 0;
  }
  line(x, 0, x, height); 
}

void mousePressed() {
  noLoop();
}

void mouseReleased() {
  loop();
}
]]></code>
</example>

<description><![CDATA[
Stops Processing from continuously executing the code within <b>draw()</b>. If <b>loop()</b> is called, the code in <b>draw()</b> begin to run continuously again. If using <b>noLoop()</b> in <b>setup()</b>, it should be the last line inside the block.
<br/> <br/>
When <b>noLoop()</b> is used, it's not possible to manipulate or access the screen inside event handling functions such as <b>mousePressed()</b> or <b>keyPressed()</b>. Instead, use those functions to call <b>redraw()</b> or <b>loop()</b>, which will run <b>draw()</b>, which can update the screen properly. This means that when noLoop() has been called, no drawing can happen, and functions like saveFrame() or loadPixels() may not be used.
<br/> <br/>
Note that if the sketch is resized, <b>redraw()</b> will be called to update the sketch, even after <b>noLoop()</b> has been specified. Otherwise, the sketch would enter an odd state until <b>loop()</b> was called.
]]></description>

<syntax><![CDATA[
noLoop()
]]></syntax>

<parameter>
<label></label>
<description></description>
</parameter>

<returns>None</returns>

<related>
loop()
redraw()
draw()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>PDE</partof>

</root>
