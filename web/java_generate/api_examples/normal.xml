<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>normal()</name>

<category>Lights, Camera</category>

<subcategory>Lights</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
Coming soon...
]]></code>
</example>

<description><![CDATA[Sets the current normal vector. This is for drawing three dimensional shapes and surfaces and specifies a vector perpendicular to the surface of the shape which determines how lighting affects it. Processing attempts to automatically assign normals to shapes, but since that's imperfect, this is a better option when you want more control. This function is identical to glNormal3f() in OpenGL.]]></description>

<syntax><![CDATA[
normal(<kbd>nx</kbd>, <kbd>ny</kbd>, <kbd>nz</kbd>)
]]></syntax>

<parameter>
<label>nx</label>
<description><![CDATA[float: x direction]]></description>
</parameter>

<parameter>
<label>ny</label>
<description><![CDATA[float: y direction]]></description>
</parameter>

<parameter>
<label>nz</label>
<description><![CDATA[float: z direction]]></description>
</parameter>

<returns>None</returns>

<related>
beginShape()
endShape()
lights()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>






</root>
